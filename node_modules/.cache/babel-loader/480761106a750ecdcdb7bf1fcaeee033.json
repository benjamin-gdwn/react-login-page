{"ast":null,"code":"var _jsxFileName = \"/Users/bengoodwin/Desktop/udemy-react/use-effect-reducers-context-api/src/components/Login/Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useReducer, useContext } from \"react\";\nimport Input from \"../UI/Input/Input\";\nimport Card from \"../UI/Card/Card\";\nimport classes from \"./Login.module.css\";\nimport Button from \"../UI/Button/Button\";\nimport AuthContext from \"../../store/auth-context\"; // reducer function uses only data which is not created in the component\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst emailReducer = (state, action) => {\n  if (action.type === \"USER_INPUT\") {\n    console.log(state.value);\n    return {\n      value: action.val,\n      isValid: action.val.includes(\"@\")\n    };\n  }\n\n  if (action.type === \"INPUT_BLUR\") {\n    console.log(state.isValid);\n    return {\n      value: state.value,\n      isValid: state.value.includes(\"@\")\n    };\n  }\n\n  return {\n    value: \"\",\n    isValid: false\n  };\n};\n\nconst passwordReducer = (state, action) => {\n  if (action.type === \"USER_INPUT\") {\n    console.log(state.value);\n    return {\n      value: action.val,\n      isValid: action.val.length > 6\n    };\n  }\n\n  if (action.type === \"USER_BLUR\") {\n    console.log(state.isValid);\n    return {\n      value: state.value,\n      isValid: state.value.length > 6\n    };\n  }\n\n  return {\n    value: \"\",\n    isValid: false\n  };\n};\n\nconst Login = props => {\n  _s();\n\n  // useReducer - first value is the state and the dispatch function\n  // reducer function created outside of the component function\n  // reducer function is first value passed\n  // second value in use reducer is the initial state\n  // we need to use the dispatch to update a value or update validity\n  const ctx = useContext(AuthContext);\n  const [emailState, dispatechEmail] = useReducer(emailReducer, {\n    value: \"\",\n    isValid: null\n  });\n  const [passwordState, dispatchPassword] = useReducer(passwordReducer, {\n    value: \"\",\n    isValid: null\n  });\n  const [formIsValid, setFormIsValid] = useState(false);\n  useEffect(() => {\n    console.log(\"effect running\"); // cleanup function below runs every time, without a dependancy it will still run\n\n    return () => {\n      console.log(\"effect cleanup\");\n    };\n  }, []); // object destructuring to pull out properties of those objects\n\n  const {\n    isValid: passwordIsValid\n  } = passwordState;\n  const {\n    isValid: emailIsValid\n  } = emailState; // useEffect runs after each rendering of the component. if we add empty array\n  // it doesnt run after the initial mounting\n\n  useEffect(() => {\n    // storing the main function and the timeout as a variable to use later down as the cleanup\n    const identifier = setTimeout(() => {\n      console.log('checking form validity');\n      setFormIsValid(emailIsValid && passwordIsValid); // timer below after the function\n    }, 500); // cleanup for useEffect before it executes the next time\n\n    return () => {\n      // inbuilt function to clear the timeout so the timer resets each time the timer is cleared\n      clearTimeout(identifier);\n    }; // arguments passed are the states that may changed\n  }, [emailIsValid, passwordIsValid]);\n\n  const emailChangeHandler = event => {\n    // when dispatch email is called it usually an object used as an identifier\n    // second argument is that we want to sve what user entered, so we add val which holds the target value\n    dispatechEmail({\n      type: \"USER_INPUT\",\n      val: event.target.value\n    });\n    setFormIsValid(event.target.value.includes(\"@\") && passwordState.isValid);\n  };\n\n  const passwordChangeHandler = event => {\n    console.log(event.target.value);\n    dispatchPassword({\n      type: \"USER_INPUT\",\n      val: event.target.value\n    });\n    setFormIsValid(emailState.isValid && passwordState.isValid);\n  };\n\n  const validateEmailHandler = () => {\n    dispatechEmail({\n      type: \"INPUT_BLUR\"\n    });\n  };\n\n  const validatePasswordHandler = () => {\n    dispatchPassword({\n      type: \"INPUT_BLUR\"\n    });\n  };\n\n  const submitHandler = event => {\n    event.preventDefault();\n    ctx.onLogin(emailState.value, passwordState.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: classes.login,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${classes.control} ${emailState.isValid === false ? classes.invalid : \"\"}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${classes.control} ${passwordState.isValid === false ? classes.invalid : \"\"}`,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          value: passwordState.value,\n          onChange: passwordChangeHandler,\n          onBlur: validatePasswordHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.actions,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          className: classes.btn,\n          disabled: !formIsValid,\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Login, \"jMK++N4e1shdK+SbEf8yqr5qA7w=\");\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useEffect","useReducer","useContext","Input","Card","classes","Button","AuthContext","emailReducer","state","action","type","console","log","value","val","isValid","includes","passwordReducer","length","Login","props","ctx","emailState","dispatechEmail","passwordState","dispatchPassword","formIsValid","setFormIsValid","passwordIsValid","emailIsValid","identifier","setTimeout","clearTimeout","emailChangeHandler","event","target","passwordChangeHandler","validateEmailHandler","validatePasswordHandler","submitHandler","preventDefault","onLogin","login","control","invalid","actions","btn"],"sources":["/Users/bengoodwin/Desktop/udemy-react/use-effect-reducers-context-api/src/components/Login/Login.js"],"sourcesContent":["import React, { useState, useEffect, useReducer, useContext } from \"react\";\nimport Input from \"../UI/Input/Input\"\nimport Card from \"../UI/Card/Card\";\nimport classes from \"./Login.module.css\";\nimport Button from \"../UI/Button/Button\";\nimport AuthContext from \"../../store/auth-context\";\n// reducer function uses only data which is not created in the component\nconst emailReducer = (state, action) => {\n  if (action.type === \"USER_INPUT\") {\n    console.log(state.value);\n    return { value: action.val, isValid: action.val.includes(\"@\") };\n  }\n  if (action.type === \"INPUT_BLUR\") {\n    console.log(state.isValid);\n    return { value: state.value, isValid: state.value.includes(\"@\") };\n  }\n  return { value: \"\", isValid: false };\n};\n\nconst passwordReducer = (state, action) => {\n  if (action.type === \"USER_INPUT\") {\n    console.log(state.value);\n    return { value: action.val, isValid: action.val.length > 6 };\n  }\n  if (action.type === \"USER_BLUR\") {\n    console.log(state.isValid);\n\n    return { value: state.value, isValid: state.value.length > 6 };\n  }\n  return { value: \"\", isValid: false };\n};\n\nconst Login = (props) => {\n  // useReducer - first value is the state and the dispatch function\n  // reducer function created outside of the component function\n  // reducer function is first value passed\n  // second value in use reducer is the initial state\n  // we need to use the dispatch to update a value or update validity\n  const ctx = useContext(AuthContext);\n  const [emailState, dispatechEmail] = useReducer(emailReducer, {\n    value: \"\",\n    isValid: null,\n  });\n\n  const [passwordState, dispatchPassword] = useReducer(passwordReducer, {\n    value: \"\",\n    isValid: null,\n  });\n\n  const [formIsValid, setFormIsValid] = useState(false);\n\n  useEffect(() => {\n    console.log(\"effect running\");\n\n    // cleanup function below runs every time, without a dependancy it will still run\n    return () => {\n      console.log(\"effect cleanup\");\n    };\n  }, []);\n  // object destructuring to pull out properties of those objects\n  const { isValid: passwordIsValid } = passwordState;\n  const{ isValid: emailIsValid } = emailState;\n  // useEffect runs after each rendering of the component. if we add empty array\n  // it doesnt run after the initial mounting\n  useEffect(() => {\n    // storing the main function and the timeout as a variable to use later down as the cleanup\n    const identifier = setTimeout(() => {\n      console.log('checking form validity')\n      setFormIsValid(emailIsValid && passwordIsValid);\n      // timer below after the function\n    }, 500);\n    // cleanup for useEffect before it executes the next time\n    return () => {\n      // inbuilt function to clear the timeout so the timer resets each time the timer is cleared\n      clearTimeout(identifier);\n    };\n    // arguments passed are the states that may changed\n  }, [emailIsValid, passwordIsValid]);\n\n  const emailChangeHandler = (event) => {\n    // when dispatch email is called it usually an object used as an identifier\n    // second argument is that we want to sve what user entered, so we add val which holds the target value\n    dispatechEmail({ type: \"USER_INPUT\", val: event.target.value });\n    setFormIsValid(event.target.value.includes(\"@\") && passwordState.isValid);\n  };\n\n  const passwordChangeHandler = (event) => {\n    console.log(event.target.value);\n    dispatchPassword({ type: \"USER_INPUT\", val: event.target.value });\n    setFormIsValid(emailState.isValid && passwordState.isValid);\n  };\n\n  const validateEmailHandler = () => {\n    dispatechEmail({ type: \"INPUT_BLUR\" });\n  };\n\n  const validatePasswordHandler = () => {\n    dispatchPassword({ type: \"INPUT_BLUR\" });\n  };\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n    ctx.onLogin(emailState.value, passwordState.value);\n  };\n\n  return (\n    <Card className={classes.login}>\n      <form onSubmit={submitHandler}>\n        <div\n          className={`${classes.control} ${\n            emailState.isValid === false ? classes.invalid : \"\"\n          }`}\n        >\n        </div>\n        <Input />\n        <div\n          className={`${classes.control} ${\n            passwordState.isValid === false ? classes.invalid : \"\"\n          }`}\n        >\n          <label htmlFor=\"password\">Password</label>\n          <input\n            type=\"password\"\n            id=\"password\"\n            value={passwordState.value}\n            onChange={passwordChangeHandler}\n            onBlur={validatePasswordHandler}\n          />\n        </div>\n        <div className={classes.actions}>\n          <Button type=\"submit\" className={classes.btn} disabled={!formIsValid}>\n            Login\n          </Button>\n        </div>\n      </form>\n    </Card>\n  );\n};\n\nexport default Login;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}